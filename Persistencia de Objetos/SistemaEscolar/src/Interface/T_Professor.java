/**
 * @author Laura
 */

package Interface;

import dao.ProfessorDao;
import dominio.Professor;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class T_Professor extends javax.swing.JDialog {
    Professor professor;
    ProfessorDao dao = new ProfessorDao();

    /**
     * Creates new form T_Professor
     */
    public T_Professor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgsexo = new javax.swing.ButtonGroup();
        txtCodigo = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jCheckBoxGraduacao = new javax.swing.JCheckBox();
        jCheckBoxEspecializacao = new javax.swing.JCheckBox();
        jCheckBoxMestrado = new javax.swing.JCheckBox();
        jCheckBoxDoutorado = new javax.swing.JCheckBox();
        jCheckBoxPosDoutorado = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jbtnMasc = new javax.swing.JRadioButton();
        jbtnFem = new javax.swing.JRadioButton();
        cboCidade = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        btnSalvar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tela Professor");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        txtCodigo.setBorder(javax.swing.BorderFactory.createTitledBorder("Código:"));

        txtNome.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome:"));

        txtEmail.setBorder(javax.swing.BorderFactory.createTitledBorder("E-mail"));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Titulação"));

        jCheckBoxGraduacao.setText("Graduação");

        jCheckBoxEspecializacao.setText("Especialização");

        jCheckBoxMestrado.setText("Mestrado");

        jCheckBoxDoutorado.setText("Doutorado");

        jCheckBoxPosDoutorado.setText("Pós Doutorado");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxGraduacao)
                .addGap(31, 31, 31)
                .addComponent(jCheckBoxEspecializacao)
                .addGap(37, 37, 37)
                .addComponent(jCheckBoxMestrado)
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxDoutorado)
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxPosDoutorado)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxGraduacao)
                    .addComponent(jCheckBoxEspecializacao)
                    .addComponent(jCheckBoxMestrado)
                    .addComponent(jCheckBoxDoutorado)
                    .addComponent(jCheckBoxPosDoutorado))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Sexo"));

        bgsexo.add(jbtnMasc);
        jbtnMasc.setText("Masculino");

        bgsexo.add(jbtnFem);
        jbtnFem.setText("Feminino");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtnMasc)
                .addGap(18, 18, 18)
                .addComponent(jbtnFem)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnMasc)
                    .addComponent(jbtnFem))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cboCidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Juiz de Fora - MG", "Visconde do Rio Branco - MG", "Rio de Janeiro - RJ", "São Paulo - SP" }));
        cboCidade.setBorder(javax.swing.BorderFactory.createTitledBorder("Cidade/UF"));

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome", "Email", "Titulação", "Sexo", "Cidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/salvar.gif"))); // NOI18N
        btnSalvar.setToolTipText("Salvar");
        btnSalvar.setPreferredSize(new java.awt.Dimension(40, 40));
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/atualiza.jpg"))); // NOI18N
        btnAtualizar.setToolTipText("Atualizar");
        btnAtualizar.setPreferredSize(new java.awt.Dimension(40, 40));
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/DEL.jpg"))); // NOI18N
        btnExcluir.setToolTipText("Excluir");
        btnExcluir.setPreferredSize(new java.awt.Dimension(40, 40));
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/novo.jpg"))); // NOI18N
        btnNovo.setToolTipText("Novo");
        btnNovo.setPreferredSize(new java.awt.Dimension(40, 40));
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Buscar.jpg"))); // NOI18N
        btnBuscar.setToolTipText("Buscar");
        btnBuscar.setPreferredSize(new java.awt.Dimension(40, 40));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cboCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addComponent(txtNome)
                    .addComponent(txtEmail)
                    .addComponent(jScrollPane1))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnNovo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboCidade))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
       txtCodigo.setEnabled(true);
       txtCodigo.setText("");
       txtNome.setText(" ");
       txtEmail.setText(" ");
       
       jCheckBoxGraduacao.setSelected(false);
       jCheckBoxDoutorado.setSelected(false);
       jCheckBoxEspecializacao.setSelected(false);
       jCheckBoxMestrado.setSelected(false);
       jCheckBoxPosDoutorado.setSelected(false);
       
       bgsexo.clearSelection();
       
       cboCidade.setSelectedItem(null);
       
       txtNome.requestFocus();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        
        try {
         professor = new Professor();
         professor.setNome(txtNome.getText());
         professor.setEmail(txtEmail.getText());
         
         String titulacao = null;
         
         String graduacao = null;
         if (jCheckBoxGraduacao.isSelected()){
             graduacao = "Graduacao";
         }else{
             graduacao = "";
         }
         
         String especializacao = null;
         if (jCheckBoxEspecializacao.isSelected()){
             especializacao = "Especializacao";
         }else{
             especializacao = "";
         }
         
         String mestrado = null;
         if (jCheckBoxMestrado.isSelected()){
             mestrado = "Mestrado";
         }else{
             mestrado = "";
         }
         
         String doutorado = null;
         if (jCheckBoxDoutorado.isSelected()){
             doutorado = "Doutorado";
         }else{
             doutorado = "";
         }
         
         String pos_doutorado = null;
         if (jCheckBoxPosDoutorado.isSelected()){
             pos_doutorado = "Pos-Doutorado";
         }else{
             pos_doutorado = "";
         }
         
         titulacao = graduacao + " " + especializacao + " " + mestrado + " " + doutorado + " " + pos_doutorado;
         
         professor.setTitulacao(titulacao);
         
         String sexo = null;
         if (jbtnMasc.isSelected()){
             sexo = "Masculino";
         }else if(jbtnFem.isSelected()){
             sexo = "Feminino";
         }else{
             sexo = "";
         }
         professor.setSexo(sexo);
         
         String cidade = cboCidade.getSelectedItem().toString();
         professor.setCidade(cidade);
         
         
         dao = new ProfessorDao();
         dao.cadastrarProfessor(professor);

          JOptionPane.showMessageDialog(null, "Cadastro realizado com sucesso!");
                
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Erro ao cadastrar o Professor!");
               System.err.println(e);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        
        try {
            Professor prof = new Professor();
            prof.setCodigo(Integer.parseInt(txtCodigo.getText()));
            
            ProfessorDao dao = new ProfessorDao();
            dao.excluirProfessor(prof);
            JOptionPane.showMessageDialog(null, "Professor Excluido com Sucesso!");
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao excluir professor");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        
        try {
            Professor obj = new Professor();
            obj.setCodigo(Integer.parseInt(txtCodigo.getText()));
            
            obj.setNome(txtNome.getText());
            obj.setEmail(txtEmail.getText());

            String titulacao = null;

            String graduacao = null;
            if (jCheckBoxGraduacao.isSelected()){
                graduacao = "Graduacao";
            }else{
                graduacao = "";
            }

            String especializacao = null;
            if (jCheckBoxEspecializacao.isSelected()){
                especializacao = "Especializacao";
            }else{
                especializacao = "";
            }

            String mestrado = null;
            if (jCheckBoxMestrado.isSelected()){
                mestrado = "Mestrado";
            }else{
                mestrado = "";
            }

            String doutorado = null;
            if (jCheckBoxDoutorado.isSelected()){
                doutorado = "Doutorado";
            }else{
                doutorado = "";
            }

            String pos_doutorado = null;
            if (jCheckBoxPosDoutorado.isSelected()){
                pos_doutorado = "Pos-Doutorado";
            }else{
                pos_doutorado = "";
            }

            titulacao = graduacao + " " + especializacao + " " + mestrado
                    + " " + doutorado + " " + pos_doutorado;
            obj.setTitulacao(titulacao);

            String sexo = null;
            if (jbtnMasc.isSelected()){
                sexo = "Masculino";
            }else if(jbtnFem.isSelected()){
                sexo = "Feminino";
            }else{
                sexo = "";
            }
            obj.setSexo(sexo);

            
            obj.setCidade(cboCidade.getSelectedItem().toString());

           dao = new ProfessorDao();
           dao.alterarProfessor(obj);

           JOptionPane.showMessageDialog(null, "Professor Atualizado com Sucesso!");
       } catch (Exception e) {
           JOptionPane.showMessageDialog(null, "Erro ao atualizar professor!\n" + e);
       }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        txtCodigo.setEnabled(false);
        txtCodigo.setText(tabela.getValueAt(tabela.getSelectedRow(), 0).toString());
        txtNome.setText(tabela.getValueAt(tabela.getSelectedRow(), 1).toString());
        txtEmail.setText(tabela.getValueAt(tabela.getSelectedRow(), 2).toString());
        
        String titulacao = tabela.getValueAt(tabela.getSelectedRow(), 3).toString();        
        
        String graduacao = "Graduacao";
        if (titulacao.toLowerCase().contains(graduacao.toLowerCase())){
            jCheckBoxGraduacao.setSelected(true);
        }else{
            jCheckBoxGraduacao.setSelected(false);
        }
        
        String especializacao = "Especializacao";
        if (titulacao.toLowerCase().contains(especializacao.toLowerCase())){
            jCheckBoxEspecializacao.setSelected(true);
        }else{
            jCheckBoxEspecializacao.setSelected(false);
        }
        
        String mestrado = "Mestrado";
        if (titulacao.toLowerCase().contains(mestrado.toLowerCase())){
            jCheckBoxMestrado.setSelected(true);
        }else{
            jCheckBoxMestrado.setSelected(false);
        }
        
        String doutorado = "Doutorado";
        if (titulacao.toLowerCase().contains(doutorado.toLowerCase())){
            jCheckBoxDoutorado.setSelected(true);
        }else{
            jCheckBoxDoutorado.setSelected(false);
        }
        
        String pos_doutorado = "Pos-Doutorado";
        if (titulacao.toLowerCase().contains(pos_doutorado.toLowerCase())){
            jCheckBoxPosDoutorado.setSelected(true);
        }else{
            jCheckBoxPosDoutorado.setSelected(false);
        }
        
        String sexo = tabela.getValueAt(tabela.getSelectedRow(), 4).toString();
        switch (sexo) {
            case "Feminino":
                jbtnFem.setSelected(true);
                break;
            case "Masculino":
                jbtnMasc.setSelected(true);
                break;
            default:
                bgsexo.clearSelection();
                break;
        }
        
        String cidade = tabela.getValueAt(tabela.getSelectedRow(), 5).toString();
        ArrayList<String> listaCidades = new ArrayList();
        listaCidades.add("Juiz de Fora - MG"); //0
        listaCidades.add("Visconde do Rio Branco - MG"); //1
        listaCidades.add("Rio de Janeiro - RJ"); //2
        listaCidades.add("São Paulo - SP"); //3
        
        int n = listaCidades.size();
        for (int i=0; i<n; i++) {
            if (cidade.equals(listaCidades.get(i))){
                cboCidade.setSelectedIndex(i);
            }
        }
        
        
    }//GEN-LAST:event_tabelaMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        Listar();
    }//GEN-LAST:event_formWindowActivated

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try{
            Professor prof = new Professor();
            prof.setCodigo(Integer.parseInt(txtCodigo.getText()));
            
            ProfessorDao dao = new ProfessorDao();
            Professor prof_buscado = new Professor();
            prof_buscado = dao.buscarProfessor(prof);
            
            txtNome.setText(prof_buscado.getNome());
            txtEmail.setText(prof_buscado.getEmail());
            
            
            String titulacao = prof_buscado.getTitulacao();        
        
            String graduacao = "Graduacao";
            if (titulacao.toLowerCase().contains(graduacao.toLowerCase())){
                jCheckBoxGraduacao.setSelected(true);
            }else{
                jCheckBoxGraduacao.setSelected(false);
            }

            String especializacao = "Especializacao";
            if (titulacao.toLowerCase().contains(especializacao.toLowerCase())){
                jCheckBoxEspecializacao.setSelected(true);
            }else{
                jCheckBoxEspecializacao.setSelected(false);
            }

            String mestrado = "Mestrado";
            if (titulacao.toLowerCase().contains(mestrado.toLowerCase())){
                jCheckBoxMestrado.setSelected(true);
            }else{
                jCheckBoxMestrado.setSelected(false);
            }

            String doutorado = "Doutorado";
            if (titulacao.toLowerCase().contains(doutorado.toLowerCase())){
                jCheckBoxDoutorado.setSelected(true);
            }else{
                jCheckBoxDoutorado.setSelected(false);
            }

            String pos_doutorado = "Pos-Doutorado";
            if (titulacao.toLowerCase().contains(pos_doutorado.toLowerCase())){
                jCheckBoxPosDoutorado.setSelected(true);
            }else{
                jCheckBoxPosDoutorado.setSelected(false);
            }

            String sexo = prof_buscado.getSexo();
            switch (sexo) {
                case "Feminino":
                    jbtnFem.setSelected(true);
                    break;
                case "Masculino":
                    jbtnMasc.setSelected(true);
                    break;
                default:
                    bgsexo.clearSelection();
                    break;
            }

            String cidade = prof_buscado.getCidade();
            ArrayList<String> listaCidades = new ArrayList();
            listaCidades.add("Juiz de Fora - MG"); //0
            listaCidades.add("Visconde do Rio Branco - MG"); //1
            listaCidades.add("Rio de Janeiro - RJ"); //2
            listaCidades.add("São Paulo - SP"); //3

            int n = listaCidades.size();
            for (int i=0; i<n; i++) {
                if (cidade.equals(listaCidades.get(i))){
                    cboCidade.setSelectedIndex(i);
                }
            }
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao excluir professor");
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    public void Listar(){
    try {
        dao = new ProfessorDao();
        List<Professor> listarProfessores = dao.listarProfessores();
        DefaultTableModel modelo=(DefaultTableModel)tabela.getModel();
        modelo.setNumRows(0);
        for (Professor lp : listarProfessores) {
            modelo.addRow(new Object[]{
            lp.getCodigo(),
            lp.getNome(),
            lp.getEmail(),
            lp.getTitulacao(),
            lp.getSexo(),
            lp.getCidade(),   
        });
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Erro ao Listar os Professores");
    }
    
}
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(T_Professor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(T_Professor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(T_Professor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(T_Professor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                T_Professor dialog = new T_Professor(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgsexo;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cboCidade;
    private javax.swing.JCheckBox jCheckBoxDoutorado;
    private javax.swing.JCheckBox jCheckBoxEspecializacao;
    private javax.swing.JCheckBox jCheckBoxGraduacao;
    private javax.swing.JCheckBox jCheckBoxMestrado;
    private javax.swing.JCheckBox jCheckBoxPosDoutorado;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jbtnFem;
    private javax.swing.JRadioButton jbtnMasc;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
